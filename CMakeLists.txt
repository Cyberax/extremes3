PROJECT(extremes3)

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

ENABLE_TESTING()

#SET(CMAKE_BUILD_TYPE MinSizeRel)
#SET(CMAKE_BUILD_TYPE RelWithDebInfo)
SET(CMAKE_BUILD_TYPE Debug)
IF(NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE Debug CACHE STRING
	  "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel."
	  FORCE)
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fno-inline -O0")
ENDIF(NOT CMAKE_BUILD_TYPE)

# Define DEBUG on debug builds
set_directory_properties(PROPERTIES COMPILE_DEFINITIONS_DEBUG DEBUG=1)
# Define 'NDEBUG' on release builds
foreach (configuration MINSIZEREL RELWITHDEBINFO RELEASE)
	SET(NDEBUG "1")
	set_directory_properties(PROPERTIES COMPILE_DEFINITIONS_${configuration} "NDEBUG=1")
endforeach ()

IF(WIN32)
	ADD_DEFINITIONS(-DUNICODE -D_UNICODE -D_DEBUG)

	ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
	SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /OPT:NOREF")
	IF(CMAKE_GENERATOR MATCHES "Visual Studio")
		# replace /MDd with /MTd
		STRING(REPLACE "/MDd" "/MTd" CMAKE_CXX_FLAGS_DEBUG_INIT
			${CMAKE_CXX_FLAGS_DEBUG_INIT})
		STRING(REPLACE "/MDd" "/MTd" CMAKE_C_FLAGS_DEBUG_INIT
			${CMAKE_C_FLAGS_DEBUG_INIT})
		STRING(REPLACE "/MD" "/MT" CMAKE_C_FLAGS_RELEASE
			${CMAKE_C_FLAGS_RELEASE})
		STRING(REPLACE "/MD" "/MT" CMAKE_C_FLAGS_RELWITHDEBINFO
			${CMAKE_C_FLAGS_RELWITHDEBINFO})
		STRING(REPLACE "/MD" "/MT" CMAKE_C_FLAGS_MINSIZEREL
			${CMAKE_C_FLAGS_MINSIZEREL})
		STRING(REPLACE "/MDd" "/MTd" CMAKE_C_FLAGS_DEBUG
			${CMAKE_C_FLAGS_DEBUG})
		STRING(REPLACE "/MD" "/MT" CMAKE_CXX_FLAGS_RELEASE
			${CMAKE_CXX_FLAGS_RELEASE})
		STRING(REPLACE "/MD" "/MT" CMAKE_CXX_FLAGS_RELWITHDEBINFO
			${CMAKE_CXX_FLAGS_RELWITHDEBINFO})
		STRING(REPLACE "/MD" "/MT" CMAKE_CXX_FLAGS_MINSIZEREL
			${CMAKE_CXX_FLAGS_MINSIZEREL})
		STRING(REPLACE "/MDd" "/MTd" CMAKE_CXX_FLAGS_DEBUG
			${CMAKE_CXX_FLAGS_DEBUG})
	ENDIF()
ELSEIF(UNIX)
	ADD_DEFINITIONS(-fPIC)

	IF(CMAKE_BUILD_TYPE MATCHES "Debug")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
	ELSE()
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x -fvisibility=hidden -fvisibility-inlines-hidden -fno-builtin-memcmp")
		SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fvisibility=hidden")
	ENDIF()

	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mtune=core2 -msse4.2")
	SET(CMAKE_C_FLAGS "${CMAKE_CXX_FLAGS} -mtune=core2 -msse4.2")
ELSE()
	MESSAGE(FATAL_ERROR "Unsupported target OS!")
ENDIF()

ADD_SUBDIRECTORY(es3)
